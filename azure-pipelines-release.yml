# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

name: '$(BuildDefinitionName) - $(Date:yyyy.MM.dd)$(Rev:.r)'

trigger:
  branches:
    include:
      - master
      
pr: none

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  version.MajorMinor: '1.3'
  version.Revision: $[counter(variables['version.MajorMinor'], 0)]
  versionNumber: '$(version.MajorMinor).$(version.Revision)'

steps:
- task: PowerShell@2
  displayName: Update the name of the build, using the generated version number.
  inputs:
    targetType: inline
    script: |
      [string] $buildName = "$(build.definitionName) - $(versionNumber)"
      Write-Host "Update the build name to '$buildName'."
      Write-Host "##vso[build.updatebuildnumber]$buildName"

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  displayName: Restore package references
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  displayName: Build the solution
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:Version=$(packageVersionNumber) /p:SkipInvalidConfigurations=true'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    
- task: VSTest@3
  displayName: Run Unit Tests
  inputs:
    testSelector: 'testAssemblies'
    testAssemblyVer2: |
      **\*UnitTests.dll
      !**\*TestAdapter.dll
      !**\obj\**
    searchFolder: '$(System.DefaultWorkingDirectory)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    
- task: PowerShell@2
  displayName: Install Playwright Browsers
  inputs:
    targetType: filePath
    filePath: 'FoolProof.Core.Tests.E2eTests/bin/$(buildConfiguration)/net8.0/playwright.ps1'
    arguments: install --with-deps

- task: VSTest@3
  displayName: Run E2E Tests
  inputs:
    testSelector: 'testAssemblies'
    testAssemblyVer2: |
      **\*E2eTests.dll
      !**\*TestAdapter.dll
      !**\obj\**
    searchFolder: '$(System.DefaultWorkingDirectory)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    runSettingsFile: 'FoolProof.Core.Tests.E2eTests/test.runsettings'
    overrideTestrunParameters: -StartWebApp true -WebAppPort 9090 -WebAppUrl http://localhost:9090
    rerunFailedTests: true
    rerunType: 'basedOnTestFailurePercentage'
    rerunFailedThreshold: '50'
    rerunMaxAttempts: '5'
    
- task: CopyFiles@2
  displayName: Copy artifacts (packages) to publish
  inputs:
    sourceFolder: '$(Build.SourcesDirectory)\FoolProof.Core\bin\$(buildConfiguration)\'
    contents: 'FoolProof.Core.*.nupkg'
    targetFolder: '$(Build.ArtifactStagingDirectory)'
    cleanTargetFolder: true

- task: PublishBuildArtifacts@1
  displayName: Publish build artifacts (packages)
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'Packages'
    publishLocation: 'Container'

- task: NuGetCommand@2
  displayName: Publish package in NuGet.org
  inputs:
    command: 'push'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'Nuget.org'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/FoolProof.Core.*.nupkg'
    
